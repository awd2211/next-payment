# ====================================================================
# 支付平台环境变量配置示例
# ====================================================================
#
# 复制此文件为 .env 并填入实际值
#
# ⚠️ 重要说明：
# - Docker 内部通信使用服务名作为域名（如 postgres, redis, kafka）
# - 本地开发连接 Docker 服务使用 localhost + 40000+ 端口
# - 详细端口映射见: docs/PORT_MAPPING.md
#
# ====================================================================

# ============================
# 环境标识
# ============================

ENV=development
# 可选值: development, staging, production

# ============================
# 数据库配置 - PostgreSQL
# ============================

# Docker 容器内部访问（服务间通信）
# 服务名 'postgres' 会自动解析为容器 IP
DATABASE_URL=postgres://postgres:postgres@postgres:5432/payment_platform?sslmode=disable

# 本地开发环境访问 Docker 容器
# DATABASE_URL=postgres://postgres:postgres@localhost:40432/payment_platform?sslmode=disable

# 独立配置项
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=payment_platform
POSTGRES_HOST=postgres      # Docker 内部使用服务名
POSTGRES_PORT=5432          # 容器内部端口
POSTGRES_EXTERNAL_PORT=40432  # 宿主机暴露端口

# 数据库连接池配置
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_CONN_MAX_LIFETIME=5m

# ============================
# Redis 缓存配置
# ============================

# Docker 内部使用服务名
REDIS_HOST=redis
REDIS_PORT=6379            # 容器内部端口
REDIS_EXTERNAL_PORT=40379  # 宿主机暴露端口
REDIS_PASSWORD=
REDIS_DB=0
REDIS_POOL_SIZE=10

# 本地开发环境访问 Docker 容器
# REDIS_HOST=localhost
# REDIS_PORT=40379

# ============================
# Kafka 消息队列配置
# ============================

# Docker 内部使用服务名
KAFKA_BROKERS=kafka:9092
KAFKA_EXTERNAL_BROKERS=localhost:40092  # 本地访问地址
KAFKA_GROUP_ID=payment-platform
KAFKA_AUTO_OFFSET_RESET=earliest

# Zookeeper（仅内部使用）
ZOOKEEPER_CONNECT=zookeeper:2181

# ============================
# 微服务端口配置
# ============================

# 容器内部端口（Docker 服务间通信）
ADMIN_PORT=8000
MERCHANT_PORT=8001
PAYMENT_GATEWAY_PORT=8002
CHANNEL_ADAPTER_PORT=8003
ORDER_SERVICE_PORT=8004
ACCOUNTING_SERVICE_PORT=8005
RISK_SERVICE_PORT=8006
NOTIFICATION_SERVICE_PORT=8007
ANALYTICS_SERVICE_PORT=8008
CONFIG_SERVICE_PORT=8009

# 宿主机暴露端口（外部访问）
ADMIN_EXTERNAL_PORT=40000
MERCHANT_EXTERNAL_PORT=40001
PAYMENT_GATEWAY_EXTERNAL_PORT=40002
CHANNEL_ADAPTER_EXTERNAL_PORT=40003
ORDER_SERVICE_EXTERNAL_PORT=40004
ACCOUNTING_SERVICE_EXTERNAL_PORT=40005
RISK_SERVICE_EXTERNAL_PORT=40006
NOTIFICATION_SERVICE_EXTERNAL_PORT=40007
ANALYTICS_SERVICE_EXTERNAL_PORT=40008
CONFIG_SERVICE_EXTERNAL_PORT=40009

# ============================
# Docker 内网域名说明
# ============================

# Docker Compose 自动为每个服务创建 DNS 记录：
# - postgres        -> PostgreSQL 数据库
# - redis           -> Redis 缓存
# - kafka           -> Kafka 消息队列
# - zookeeper       -> Zookeeper 协调服务
# - admin-service   -> 运营管理服务
# - merchant-service -> 商户管理服务
# - payment-gateway -> 支付网关
# - channel-adapter -> 渠道适配器
# - order-service   -> 订单服务
# - accounting-service -> 账务服务
# - risk-service    -> 风控服务
# - notification-service -> 通知服务
# - analytics-service -> 分析服务
# - config-service  -> 配置中心
#
# 示例：在 payment-gateway 中访问 order-service
# http://order-service:8004/api/v1/orders

# ============================
# JWT 认证配置
# ============================

JWT_SECRET=your-super-secret-jwt-key-change-me-in-production-min-32-chars!!
JWT_EXPIRY=24h
JWT_REFRESH_EXPIRY=168h  # 7 days
JWT_ISSUER=payment-platform

# ============================
# 邮件通知配置 (Notification Service)
# ============================

EMAIL_PROVIDER=smtp  # smtp or mailgun

# SMTP 配置（Gmail, Outlook 等）
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_FROM=noreply@payment-platform.com
SMTP_FROM_NAME=Payment Platform

# Mailgun 配置（生产环境推荐）
MAILGUN_DOMAIN=mail.yourdomain.com
MAILGUN_API_KEY=your-mailgun-api-key
MAILGUN_FROM=noreply@yourdomain.com
MAILGUN_FROM_NAME=Payment Platform
MAILGUN_EU_REGION=false

# 邮件模板路径
EMAIL_TEMPLATE_PATH=./templates/email

# ============================
# 短信通知配置 (Notification Service)
# ============================

# Twilio SMS
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_FROM=+1234567890

# ============================
# 支付渠道配置 (Channel Adapter)
# ============================

# Stripe
STRIPE_API_KEY=sk_test_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
STRIPE_PUBLISHABLE_KEY=pk_test_your_publishable_key

# PayPal
PAYPAL_CLIENT_ID=your_paypal_client_id
PAYPAL_CLIENT_SECRET=your_paypal_client_secret
PAYPAL_MODE=sandbox  # sandbox or live

# 加密货币（示例）
CRYPTO_BTC_NODE=https://bitcoin-node-url
CRYPTO_ETH_NODE=https://ethereum-node-url
CRYPTO_USDT_CONTRACT=0x...

# ============================
# 配置中心加密 (Config Service)
# ============================

# 用于加密敏感配置的密钥（必须是32字节）
ENCRYPTION_KEY=change-me-to-a-32-byte-secret!!
# 生成密钥：openssl rand -base64 32

# ============================
# 日志配置
# ============================

LOG_LEVEL=info
# 可选值: debug, info, warn, error, fatal

LOG_FORMAT=json
# 可选值: json, text

LOG_FILE_PATH=./logs

# ============================
# 限流配置
# ============================

RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=200

# ============================
# 监控工具配置
# ============================

# API Gateway (Traefik)
API_GATEWAY_PORT=40080
TRAEFIK_DASHBOARD_PORT=40081

# Prometheus
PROMETHEUS_PORT=40090
PROMETHEUS_RETENTION_TIME=15d

# Grafana
GRAFANA_PORT=40300
GF_SECURITY_ADMIN_PASSWORD=admin
GF_USERS_ALLOW_SIGN_UP=false

# Jaeger
JAEGER_UI_PORT=40686
JAEGER_COLLECTOR_PORT=40268

# ============================
# 性能与安全配置
# ============================

# API 超时设置
API_TIMEOUT=30s
API_READ_TIMEOUT=60s
API_WRITE_TIMEOUT=60s

# CORS 配置
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization

# 请求大小限制
MAX_REQUEST_SIZE=10MB
MAX_UPLOAD_SIZE=50MB

# ============================
# 业务配置
# ============================

# 支付配置
DEFAULT_CURRENCY=USD
SUPPORTED_CURRENCIES=USD,EUR,GBP,JPY,CNY
MIN_PAYMENT_AMOUNT=100  # cents
MAX_PAYMENT_AMOUNT=1000000  # cents

# 退款配置
REFUND_WINDOW_DAYS=30
PARTIAL_REFUND_ENABLED=true

# 结算配置
SETTLEMENT_FREQUENCY=daily  # daily, weekly, monthly
SETTLEMENT_HOLD_DAYS=2

# ============================
# 开发工具配置
# ============================

# Air 热加载（本地开发）
AIR_ENABLED=true

# 调试模式
DEBUG=false
PPROF_ENABLED=false

# ============================
# 快速访问地址参考
# ============================

# 基础设施（从宿主机访问 Docker）:
# - PostgreSQL: localhost:40432
# - Redis: localhost:40379
# - Kafka: localhost:40092
#
# 微服务 HTTP API:
# - Admin Service: http://localhost:40000
# - Merchant Service: http://localhost:40001
# - Payment Gateway: http://localhost:40002
# - Channel Adapter: http://localhost:40003
# - Order Service: http://localhost:40004
# - Accounting Service: http://localhost:40005
# - Risk Service: http://localhost:40006
# - Notification Service: http://localhost:40007
# - Analytics Service: http://localhost:40008
# - Config Service: http://localhost:40009
#
# 监控工具:
# - API Gateway: http://localhost:40080
# - Traefik Dashboard: http://localhost:40081
# - Prometheus: http://localhost:40090
# - Grafana: http://localhost:40300 (admin/admin)
# - Jaeger UI: http://localhost:40686
#
# 健康检查示例:
# curl http://localhost:40005/health
#
# 详细端口映射文档: docs/PORT_MAPPING.md

# ============================
# Docker 网络信息
# ============================

# 网络名称: payment_payment-network
# 子网: 172.28.0.0/16
# 网关: 172.28.0.1
# 网桥: br-payment

# 查看网络信息:
# docker network inspect payment_payment-network

# ============================
# 备注
# ============================

# 1. 所有密钥和密码请在生产环境中替换为强密码
# 2. JWT_SECRET 至少32个字符
# 3. ENCRYPTION_KEY 必须是32字节
# 4. 生产环境请启用 HTTPS
# 5. 配置防火墙只开放必要端口
# 6. 定期备份数据库
# 7. 监控日志和告警
