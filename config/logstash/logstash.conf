input {
  # 从文件读取日志（支持所有微服务日志）
  file {
    path => "/var/log/payment/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    tags => ["microservice"]
  }

  # TCP 输入（可选，用于实时日志流）
  tcp {
    port => 5014
    codec => "json_lines"
    tags => ["tcp"]
  }

  # UDP 输入（可选，用于快速日志传输）
  udp {
    port => 5015
    codec => "json_lines"
    tags => ["udp"]
  }
}

filter {
  # 解析 JSON 日志
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
    }
  }

  # 提取服务名称（从日志文件路径）
  if [path] {
    grok {
      match => { "path" => "/var/log/payment/%{DATA:service_name}\.log" }
    }
  }

  # 提取日志级别
  if [level] {
    mutate {
      uppercase => [ "level" ]
    }
  }

  # 添加时间戳
  date {
    match => [ "timestamp", "ISO8601", "yyyy-MM-dd HH:mm:ss" ]
    target => "@timestamp"
  }

  # 提取微服务相关字段
  if [service] {
    mutate {
      add_field => { "microservice" => "%{service}" }
    }
  }

  # 提取追踪 ID（用于分布式追踪关联）
  if [trace_id] {
    mutate {
      add_field => { "trace" => "%{trace_id}" }
    }
  }

  # 提取 HTTP 请求信息
  if [method] and [path] {
    mutate {
      add_field => { "http_request" => "%{method} %{path}" }
    }
  }

  # 标记错误日志
  if [level] == "ERROR" or [level] == "FATAL" {
    mutate {
      add_tag => [ "error" ]
    }
  }

  # 标记慢查询（duration > 1s）
  if [duration] {
    ruby {
      code => "
        duration_ms = event.get('duration').to_f
        if duration_ms > 1000
          event.tag('slow_query')
        end
      "
    }
  }
}

output {
  # 输出到 Elasticsearch
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "payment-logs-%{+YYYY.MM.dd}"

    # 根据服务名称创建不同的索引
    # index => "payment-%{service_name}-%{+YYYY.MM.dd}"
  }

  # 调试输出（可选，用于开发环境）
  # stdout {
  #   codec => rubydebug
  # }
}
